{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\frontend\\\\assignmentfrontend\\\\src\\\\components\\\\CardStack.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardStack = () => {\n  _s();\n  const [scrollProgress, setScrollProgress] = useState(0);\n  const sectionRef = useRef(null);\n  const cardsData = [{\n    id: 1,\n    title: \"Lorem\",\n    subtitle: \"Ipsum\",\n    bg: \"#1D1D1D\",\n    textColor: \"#fff\"\n  }, {\n    id: 2,\n    title: \"Lorem\",\n    subtitle: \"Ipsum\",\n    bg: \"#B8B8B8\",\n    textColor: \"#000\"\n  }, {\n    id: 3,\n    title: \"Lorem\",\n    subtitle: \"Ipsum\",\n    bg: \"#E5E5E5\",\n    textColor: \"#000\"\n  }];\n  useEffect(() => {\n    const handleScroll = () => {\n      const section = sectionRef.current;\n      if (!section) return;\n      const rect = section.getBoundingClientRect();\n      const windowHeight = window.innerHeight;\n\n      // Progress between 0 (section just enters) and 1 (section leaves)\n      const progress = Math.min(1, Math.max(0, (windowHeight - rect.top) / (rect.height + windowHeight)));\n      setScrollProgress(progress);\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    handleScroll();\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n  const getCardStyle = index => {\n    const step = 1 / cardsData.length; // share of scroll for each card\n    const cardProgress = (scrollProgress - index * step) / step;\n    let translateY = \"100vh\";\n    let opacity = 0;\n    if (cardProgress >= 0 && cardProgress <= 1) {\n      // Target offset for stacking (80px per card higher than the last one)\n      const targetOffset = -index * 80;\n      const start = 100; // starting position in vh\n      const end = targetOffset / window.innerHeight * 100; // px → vh\n      const current = start + (end - start) * cardProgress;\n      translateY = `${current}vh`;\n      opacity = 1;\n    } else if (cardProgress > 1) {\n      // Fully settled position\n      translateY = `${-index * 80}px`;\n      opacity = 1;\n    }\n    return {\n      transform: `translateX(-50%) translateY(${translateY})`,\n      opacity,\n      zIndex: cardsData.length - index,\n      transition: \"transform 0.3s ease-out, opacity 0.3s ease-out\",\n      left: \"50%\",\n      top: 0,\n      position: \"absolute\",\n      width: \"60%\",\n      margin: \"0 auto\",\n      padding: \"20px\",\n      borderRadius: \"12px\"\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cardstack-section\",\n    ref: sectionRef,\n    style: {\n      position: \"relative\",\n      height: \"300vh\"\n    } // long section for scroll\n    ,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        position: \"sticky\",\n        top: 0,\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: \"Where Can I Get Some?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stacked-cards-container\",\n        style: {\n          position: \"relative\",\n          width: \"100%\",\n          height: \"100%\"\n        },\n        children: cardsData.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stacked-card card-${card.id}`,\n          style: {\n            backgroundColor: card.bg,\n            color: card.textColor,\n            ...getCardStyle(index)\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [card.title, \" \\u2013 \", card.subtitle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"This is content of card \", card.id, \". Scroll down to reveal the next one stacked above.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, card.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(CardStack, \"vDbqU7hDpQUm0O5xKQir6dF9wow=\");\n_c = CardStack;\nexport default CardStack;\nvar _c;\n$RefreshReg$(_c, \"CardStack\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","CardStack","_s","scrollProgress","setScrollProgress","sectionRef","cardsData","id","title","subtitle","bg","textColor","handleScroll","section","current","rect","getBoundingClientRect","windowHeight","window","innerHeight","progress","Math","min","max","top","height","addEventListener","removeEventListener","getCardStyle","index","step","length","cardProgress","translateY","opacity","targetOffset","start","end","transform","zIndex","transition","left","position","width","margin","padding","borderRadius","className","ref","style","children","display","flexDirection","alignItems","justifyContent","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","card","backgroundColor","color","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/frontend/assignmentfrontend/src/components/CardStack.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst CardStack = () => {\r\n  const [scrollProgress, setScrollProgress] = useState(0);\r\n  const sectionRef = useRef(null);\r\n\r\n  const cardsData = [\r\n    { id: 1, title: \"Lorem\", subtitle: \"Ipsum\", bg: \"#1D1D1D\", textColor: \"#fff\" },\r\n    { id: 2, title: \"Lorem\", subtitle: \"Ipsum\", bg: \"#B8B8B8\", textColor: \"#000\" },\r\n    { id: 3, title: \"Lorem\", subtitle: \"Ipsum\", bg: \"#E5E5E5\", textColor: \"#000\" }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const section = sectionRef.current;\r\n      if (!section) return;\r\n\r\n      const rect = section.getBoundingClientRect();\r\n      const windowHeight = window.innerHeight;\r\n\r\n      // Progress between 0 (section just enters) and 1 (section leaves)\r\n      const progress = Math.min(\r\n        1,\r\n        Math.max(0, (windowHeight - rect.top) / (rect.height + windowHeight))\r\n      );\r\n\r\n      setScrollProgress(progress);\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    handleScroll();\r\n\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  const getCardStyle = (index) => {\r\n    const step = 1 / cardsData.length; // share of scroll for each card\r\n    const cardProgress = (scrollProgress - index * step) / step;\r\n\r\n    let translateY = \"100vh\"; \r\n    let opacity = 0;\r\n\r\n    if (cardProgress >= 0 && cardProgress <= 1) {\r\n      // Target offset for stacking (80px per card higher than the last one)\r\n      const targetOffset = -index * 80; \r\n      const start = 100; // starting position in vh\r\n      const end = (targetOffset / window.innerHeight) * 100; // px → vh\r\n      const current = start + (end - start) * cardProgress;\r\n\r\n      translateY = `${current}vh`;\r\n      opacity = 1;\r\n    } else if (cardProgress > 1) {\r\n      // Fully settled position\r\n      translateY = `${-index * 80}px`;\r\n      opacity = 1;\r\n    }\r\n\r\n    return {\r\n      transform: `translateX(-50%) translateY(${translateY})`,\r\n      opacity,\r\n      zIndex: cardsData.length - index,\r\n      transition: \"transform 0.3s ease-out, opacity 0.3s ease-out\",\r\n      left: \"50%\",\r\n      top: 0,\r\n      position: \"absolute\",\r\n      width: \"60%\",\r\n      margin: \"0 auto\",\r\n      padding: \"20px\",\r\n      borderRadius: \"12px\",\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"cardstack-section\"\r\n      ref={sectionRef}\r\n      style={{ position: \"relative\", height: \"300vh\" }} // long section for scroll\r\n    >\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          position: \"sticky\",\r\n          top: 0,\r\n          height: \"100vh\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <h2 style={{ marginBottom: \"20px\" }}>Where Can I Get Some?</h2>\r\n\r\n        <div className=\"stacked-cards-container\" style={{ position: \"relative\", width: \"100%\", height: \"100%\" }}>\r\n          {cardsData.map((card, index) => (\r\n            <div\r\n              key={card.id}\r\n              className={`stacked-card card-${card.id}`}\r\n              style={{\r\n                backgroundColor: card.bg,\r\n                color: card.textColor,\r\n                ...getCardStyle(index),\r\n              }}\r\n            >\r\n              <h3>{card.title} – {card.subtitle}</h3>\r\n              <p>\r\n                This is content of card {card.id}. Scroll down to reveal the next\r\n                one stacked above.\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardStack;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}