{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\frontend\\\\assignmentfrontend\\\\src\\\\components\\\\CardStack.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardStack = () => {\n  _s();\n  const [scrollProgress, setScrollProgress] = useState(0);\n  const sectionRef = useRef(null);\n  const cardsData = [{\n    id: 1,\n    title: \"Lorem\",\n    subtitle: \"Ipsum\",\n    bg: \"#1D1D1D\",\n    textColor: \"#fff\"\n  }, {\n    id: 2,\n    title: \"Lorem\",\n    subtitle: \"Ipsum\",\n    bg: \"#B8B8B8\",\n    textColor: \"#000\"\n  }, {\n    id: 3,\n    title: \"Lorem\",\n    subtitle: \"Ipsum\",\n    bg: \"#E5E5E5\",\n    textColor: \"#000\"\n  }];\n  useEffect(() => {\n    const handleScroll = () => {\n      const section = sectionRef.current;\n      if (!section) return;\n      const rect = section.getBoundingClientRect();\n      const windowHeight = window.innerHeight;\n\n      // Progress = how far user has scrolled inside the section (0 â†’ 1)\n      const progress = Math.min(1, Math.max(0, (windowHeight - rect.top) / (rect.height + windowHeight)));\n      setScrollProgress(progress);\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    handleScroll();\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  // ðŸŽ¬ Animation function\n  const getCardStyle = index => {\n    const step = 1 / cardsData.length; // how much scroll portion per card\n    const cardProgress = (scrollProgress - index * step) / step;\n    let translateY = \"100vh\";\n    let opacity = 0;\n    if (cardProgress >= 0 && cardProgress <= 1) {\n      var _sectionRef$current;\n      // overlap = 25% of card height\n      const cardEl = (_sectionRef$current = sectionRef.current) === null || _sectionRef$current === void 0 ? void 0 : _sectionRef$current.querySelector(`.card-${index + 1}`);\n      const cardHeight = cardEl ? cardEl.offsetHeight : 400;\n      const targetOffset = -(index * (cardHeight * 0.25));\n      const start = 100; // vh start (off-screen)\n      const end = targetOffset / window.innerHeight * 100; // px â†’ vh\n      const current = start + (end - start) * cardProgress;\n      translateY = `${current}vh`;\n      opacity = 1;\n    } else if (cardProgress > 1) {\n      var _sectionRef$current2;\n      // fully stacked\n      const cardEl = (_sectionRef$current2 = sectionRef.current) === null || _sectionRef$current2 === void 0 ? void 0 : _sectionRef$current2.querySelector(`.card-${index + 1}`);\n      const cardHeight = cardEl ? cardEl.offsetHeight : 400;\n      const targetOffset = -(index * (cardHeight * 0.25));\n      translateY = `${targetOffset}px`;\n      opacity = 1;\n    }\n    return {\n      transform: `translateX(-50%) translateY(${translateY})`,\n      opacity,\n      zIndex: cardsData.length - index,\n      transition: \"transform 0.4s ease-out, opacity 0.4s ease-out\",\n      left: \"50%\",\n      top: 0,\n      position: \"absolute\"\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cardstack-section\",\n    ref: sectionRef,\n    style: {\n      position: \"relative\",\n      height: \"300vh\"\n    } // enough scroll space\n    ,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        position: \"sticky\",\n        top: 0,\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: \"Where Can I Get Some?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stacked-cards-container\",\n        style: {\n          position: \"relative\",\n          width: \"100%\",\n          height: \"100%\"\n        },\n        children: cardsData.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stacked-card card-${card.id}`,\n          style: {\n            backgroundColor: card.bg,\n            color: card.textColor,\n            width: \"60%\",\n            margin: \"0 auto\",\n            padding: \"20px\",\n            borderRadius: \"12px\",\n            ...getCardStyle(index)\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: card.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: card.subtitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"This is content of card \", card.id, \". Scroll to reveal the next one stacking above.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(CardStack, \"vDbqU7hDpQUm0O5xKQir6dF9wow=\");\n_c = CardStack;\nexport default CardStack;\nvar _c;\n$RefreshReg$(_c, \"CardStack\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","CardStack","_s","scrollProgress","setScrollProgress","sectionRef","cardsData","id","title","subtitle","bg","textColor","handleScroll","section","current","rect","getBoundingClientRect","windowHeight","window","innerHeight","progress","Math","min","max","top","height","addEventListener","removeEventListener","getCardStyle","index","step","length","cardProgress","translateY","opacity","_sectionRef$current","cardEl","querySelector","cardHeight","offsetHeight","targetOffset","start","end","_sectionRef$current2","transform","zIndex","transition","left","position","className","ref","style","children","display","flexDirection","alignItems","justifyContent","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","width","map","card","backgroundColor","color","margin","padding","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/frontend/assignmentfrontend/src/components/CardStack.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nconst CardStack = () => {\r\n  const [scrollProgress, setScrollProgress] = useState(0);\r\n  const sectionRef = useRef(null);\r\n\r\n  const cardsData = [\r\n    { id: 1, title: \"Lorem\", subtitle: \"Ipsum\", bg: \"#1D1D1D\", textColor: \"#fff\" },\r\n    { id: 2, title: \"Lorem\", subtitle: \"Ipsum\", bg: \"#B8B8B8\", textColor: \"#000\" },\r\n    { id: 3, title: \"Lorem\", subtitle: \"Ipsum\", bg: \"#E5E5E5\", textColor: \"#000\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const section = sectionRef.current;\r\n      if (!section) return;\r\n\r\n      const rect = section.getBoundingClientRect();\r\n      const windowHeight = window.innerHeight;\r\n\r\n      // Progress = how far user has scrolled inside the section (0 â†’ 1)\r\n      const progress = Math.min(\r\n        1,\r\n        Math.max(0, (windowHeight - rect.top) / (rect.height + windowHeight))\r\n      );\r\n\r\n      setScrollProgress(progress);\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    handleScroll();\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  // ðŸŽ¬ Animation function\r\n  const getCardStyle = (index) => {\r\n    const step = 1 / cardsData.length; // how much scroll portion per card\r\n    const cardProgress = (scrollProgress - index * step) / step;\r\n\r\n    let translateY = \"100vh\";\r\n    let opacity = 0;\r\n\r\n    if (cardProgress >= 0 && cardProgress <= 1) {\r\n      // overlap = 25% of card height\r\n      const cardEl = sectionRef.current?.querySelector(`.card-${index + 1}`);\r\n      const cardHeight = cardEl ? cardEl.offsetHeight : 400;\r\n      const targetOffset = -(index * (cardHeight * 0.25));\r\n\r\n      const start = 100; // vh start (off-screen)\r\n      const end = (targetOffset / window.innerHeight) * 100; // px â†’ vh\r\n      const current = start + (end - start) * cardProgress;\r\n\r\n      translateY = `${current}vh`;\r\n      opacity = 1;\r\n    } else if (cardProgress > 1) {\r\n      // fully stacked\r\n      const cardEl = sectionRef.current?.querySelector(`.card-${index + 1}`);\r\n      const cardHeight = cardEl ? cardEl.offsetHeight : 400;\r\n      const targetOffset = -(index * (cardHeight * 0.25));\r\n      translateY = `${targetOffset}px`;\r\n      opacity = 1;\r\n    }\r\n\r\n    return {\r\n      transform: `translateX(-50%) translateY(${translateY})`,\r\n      opacity,\r\n      zIndex: cardsData.length - index,\r\n      transition: \"transform 0.4s ease-out, opacity 0.4s ease-out\",\r\n      left: \"50%\",\r\n      top: 0,\r\n      position: \"absolute\",\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"cardstack-section\"\r\n      ref={sectionRef}\r\n      style={{ position: \"relative\", height: \"300vh\" }} // enough scroll space\r\n    >\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          position: \"sticky\",\r\n          top: 0,\r\n          height: \"100vh\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <h2 style={{ marginBottom: \"20px\" }}>Where Can I Get Some?</h2>\r\n\r\n        <div className=\"stacked-cards-container\" style={{ position: \"relative\", width: \"100%\", height: \"100%\" }}>\r\n          {cardsData.map((card, index) => (\r\n            <div\r\n              key={card.id}\r\n              className={`stacked-card card-${card.id}`}\r\n              style={{\r\n                backgroundColor: card.bg,\r\n                color: card.textColor,\r\n                width: \"60%\",\r\n                margin: \"0 auto\",\r\n                padding: \"20px\",\r\n                borderRadius: \"12px\",\r\n                ...getCardStyle(index),\r\n              }}\r\n            >\r\n              <div className=\"card-content\">\r\n                <div className=\"card-header\">\r\n                  <h3>{card.title}</h3>\r\n                  <h3>{card.subtitle}</h3>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <p>\r\n                    This is content of card {card.id}. Scroll to reveal the next one stacking above.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardStack;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}